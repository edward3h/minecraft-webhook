

plugins {
	id 'ethelred.java-conventions'

	// Apply the groovy plugin to also add support for Groovy (needed for Spock)
	id 'groovy'

	id("com.github.johnrengelman.shadow") version "7.1.2"
	id("io.micronaut.application") version "3.2.0"
}

version = "0.4.1"

repositories {
	mavenCentral()
}
micronaut {
	runtime("netty")
	testRuntime("spock2")
	processing {
		incremental(true)
		annotations("org.ethelred.minecraft.webhook.*")
	}
}

dependencies {
	implementation group: 'com.github.docker-java', name: 'docker-java-core', version: '3.2.12'
	implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.12'
	annotationProcessor("io.micronaut:micronaut-http-validation")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-runtime")
	implementation("jakarta.annotation:jakarta.annotation-api")
	implementation("io.micronaut.mqtt:micronaut-mqttv5")

	implementation("io.micronaut:micronaut-validation")
	implementation 'jakarta.inject:jakarta.inject-api'

	implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
	implementation 'org.apache.commons:commons-text:1.9'

	runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'
	runtimeOnly 'org.apache.logging.log4j:log4j-core:2.17.1'
	runtimeOnly 'com.fasterxml.jackson.core:jackson-databind:2.13.1'

	runtimeOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'

	testImplementation 'org.testcontainers:testcontainers:1.16.3'
	testImplementation "org.testcontainers:spock:1.16.3"
	testImplementation "org.testcontainers:mockserver:1.16.3"
	testImplementation 'org.mock-server:mockserver-client-java:5.12.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
}

compileJava {
	options.compilerArgs += [
		"-Aproject=${project.group}/${project.name}"
	]
}

application {
	// Define the main class for the application.
	mainClass = 'org.ethelred.minecraft.webhook.App'
	applicationName = 'mc-webhook'
}

tasks.named('test') {
	// Use junit platform for unit tests.
	useJUnitPlatform()
}

tasks.named("dockerfile") {
	baseImage = "ghcr.io/graalvm/graalvm-ce:java17-21.3.0"
	instruction """RUN touch /config.yml"""
}

tasks.named("dockerBuild") {
	if (project.hasProperty("github_ref")) {
		images = [
			"ghcr.io/edward3h/mc-webhook:${project.version}-SNAPSHOT-${project.property("github_ref")}"
		]
	} else {
		images = [
			"ghcr.io/edward3h/mc-webhook:latest",
			"ghcr.io/edward3h/mc-webhook:${project.version}"
		]
	}
}
