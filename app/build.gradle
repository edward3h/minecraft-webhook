

plugins {
	id 'ethelred.java-conventions'

	// Apply the groovy plugin to also add support for Groovy (needed for Spock)
	id 'groovy'

	id("com.github.johnrengelman.shadow") version "7.1.0"
	id("io.micronaut.application") version "3.0.2"
	//	id "com.palantir.docker" version "0.27.0"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
		vendor = JvmVendorSpec.GRAAL_VM
	}
}

version = "0.2"

repositories {
	mavenCentral()
}
micronaut {
	runtime("netty")
	testRuntime("spock2")
	processing {
		incremental(true)
		annotations("org.ethelred.minecraft.webhook.*")
	}
}

dependencies {
	implementation group: 'com.github.docker-java', name: 'docker-java-core', version: '3.2.10'
	implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.12'
	annotationProcessor("io.micronaut:micronaut-http-validation")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-runtime")
	implementation("jakarta.annotation:jakarta.annotation-api")

	implementation("io.micronaut:micronaut-validation")
	implementation 'jakarta.inject:jakarta.inject-api'

	implementation 'org.apache.logging.log4j:log4j-api:2.17.1'

	runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'
	runtimeOnly 'org.apache.logging.log4j:log4j-core:2.17.1'
	runtimeOnly 'com.fasterxml.jackson.core:jackson-databind:2.13.1'

	runtimeOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'
}

compileJava {
	options.compilerArgs += [
		"-Aproject=${project.group}/${project.name}"
	]
}

application {
	// Define the main class for the application.
	mainClass = 'org.ethelred.minecraft.webhook.App'
	applicationName = 'mc-webhook'
}

tasks.named('test') {
	// Use junit platform for unit tests.
	useJUnitPlatform()
}

tasks.named("dockerfile") {
  baseImage = "ghcr.io/graalvm/graalvm-ce:java11-21.3.0"
}

tasks.named("dockerBuild") {
    images = ["ghcr.io/edward3h/mc-webhook:latest", "ghcr.io/edward3h/mc-webhook:${project.version}"]
}
//docker {
//	name 'ghcr.io/edward3h/mc-webhook:latest'
//	dockerfile file('src/docker/Dockerfile.jvm')
//	buildArgs(APP_VERSION: version)
//	files tasks.distTar.outputs
//}